# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ehci_pci" "ahci" "usb_storage" "sd_mod" "sdhci_pci"];
  boot.initrd.kernelModules = [
    "wl"
  ];
  boot.extraModulePackages = with config.boot.kernelPackages; [
    broadcom_sta
    nvidia_x11_legacy390.bin
  ];
  boot.kernelModules = [
    "kvm-intel"
    "wl"
  ];

  boot.kernelPackages = pkgs.linuxKernel.packages.linux_6_1.extend (final: prev: {
    nvidia_x11 = prev.nvidia_x11_legacy390;
  });

  hardware.bluetooth.enable = true;

  # Load nvidia driver for Xorg and Wayland
  services.xserver.videoDrivers = [
    "modesetting"
  ];

  hardware.opengl = {
    enable = true;
    driSupport = true;
    driSupport32Bit = true;

    extraPackages = with pkgs; [
      intel-media-driver
      (vaapiIntel.override {enableHybridCodec = true;})
      vaapiVdpau
      libvdpau-va-gl
    ];
  };

  hardware.nvidia = {
    modesetting.enable = true;
    powerManagement.enable = false;
    powerManagement.finegrained = false;
    open = false;
    nvidiaSettings = true;
    package = config.boot.kernelPackages.nvidiaPackages.legacy_390;
    prime = {
      intelBusId = "PCI:0:2:0";
      nvidiaBusId = "PCI:1:0:0";
    };
  };
  hardware.bumblebee.enable = true;

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/79d4845a-93ab-4a5f-814c-603b067cdb75";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/E782-D7C9";
    fsType = "vfat";
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/2746361d-8231-4241-be1e-94524545948d";
    fsType = "ext4";
  };

  swapDevices = [
    {
      device = "/home/.swapfile";
      size = 24 * 1024;
    }
  ];
  boot.kernelParams = [
    "resume=UUID=2746361d-8231-4241-be1e-94524545948d"
    "resume_offset=115941376"
  ];
  systemd.services.systemd-logind.serviceConfig.ProtectHome = "read-only";

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0b1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
